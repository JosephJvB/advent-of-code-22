import fs from 'fs'
import Grid from './grid'
import RopeParser from './parser'
import { Head, IMovable, Knot, Tail } from './rope'

const KNOT_COUNT = 5
const GRID_SIZE = 26

// not cornering properly
// needs to curve

export default () => {
  const parser = new RopeParser(__dirname + '/data.txt')
  const steps = parser.steps

  // const x = 0
  // const y = 9
  const x = 11
  const y = 15

  // create rope
  const rope: IMovable[] = [new Head(x, y)]
  for (let i = 1; i <= KNOT_COUNT; i++) {
    rope.push(new Knot(i.toString(), x, y))
  }
  rope.push(new Tail(x, y))

  const grid = new Grid(GRID_SIZE, {x, y})

  for (const s of steps) {
    grid.update(rope, s)
  }
  console.log('positions', grid.tailPositionCount) // 2837 too high
  grid.writeGridFile()
}

// incorrect
// 2837 - too high
// 2816 - dunno

// solution
// ..........................
// ................H.........
// ................1.........
// ................2.........
// ................3.........
// ...............54.........
// ..............6...........
// .............7............
// ............8.............
// ...........9..............
// ..........................

// mine (tail tracker)
// ..............................
// ................T.............
// ................T.............
// ................T.............
// ................T.............
// ................T.............
// ...........STTTT..............
// ..............................